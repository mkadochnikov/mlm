#!/bin/bash

echo "üöÄ ULTIMATE FAKER FIX - –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ"
echo "=========================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Step 1: Clean everything
print_status "–®–∞–≥ 1: –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞..."
rm -rf node_modules package-lock.json yarn.lock .npm
npm cache clean --force 2>/dev/null || true

# Step 2: Create temporary package.json without problematic dependencies
print_status "–®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ package.json..."
cp package.json package.json.backup

# Step 3: Install @faker-js/faker first
print_status "–®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ @faker-js/faker..."
npm install @faker-js/faker --save --no-package-lock --legacy-peer-deps --force 2>/dev/null

# Step 4: Create faker alias in node_modules
print_status "–®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –∞–ª–∏–∞—Å–∞ faker..."
mkdir -p node_modules
if [ -d "node_modules/@faker-js" ]; then
    cd node_modules
    if [ ! -d "faker" ]; then
        ln -sf @faker-js/faker faker
        print_success "–°–æ–∑–¥–∞–Ω —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–π –ª–∏–Ω–∫ faker -> @faker-js/faker"
    fi
    cd ..
fi

# Step 5: Install dependencies without package-lock
print_status "–®–∞–≥ 5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±–µ–∑ package-lock..."
npm install --no-package-lock --legacy-peer-deps --force --ignore-scripts 2>/dev/null

# Step 6: Fix any remaining faker references
print_status "–®–∞–≥ 6: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å—Å—ã–ª–æ–∫ –Ω–∞ faker..."
if [ -f "package-lock.json" ]; then
    # Replace git URLs in package-lock.json if it exists
    sed -i 's|git+https://github.com/Marak/faker.js.git|https://registry.npmjs.org/@faker-js/faker|g' package-lock.json 2>/dev/null || true
    sed -i 's|https://github.com/Marak/faker.js.git|https://registry.npmjs.org/@faker-js/faker|g' package-lock.json 2>/dev/null || true
    sed -i 's|github:Marak/faker.js|https://registry.npmjs.org/@faker-js/faker|g' package-lock.json 2>/dev/null || true
fi

# Step 7: Final installation attempt
print_status "–®–∞–≥ 7: –§–∏–Ω–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞..."
npm install --legacy-peer-deps --force 2>/dev/null || {
    print_warning "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥..."
    
    # Alternative method: install without scripts and optional deps
    npm install --ignore-scripts --no-optional --legacy-peer-deps --force 2>/dev/null || {
        print_warning "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º yarn..."
        
        # Try with yarn
        if command -v yarn &> /dev/null; then
            yarn install --ignore-engines --ignore-scripts 2>/dev/null || true
        fi
    }
}

# Step 8: Ensure faker is available
print_status "–®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ faker..."
if [ ! -d "node_modules/@faker-js" ]; then
    print_warning "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º @faker-js/faker –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ..."
    npm install @faker-js/faker --save --force 2>/dev/null || true
fi

# Create faker alias if it doesn't exist
if [ -d "node_modules/@faker-js/faker" ] && [ ! -d "node_modules/faker" ]; then
    cd node_modules
    ln -sf @faker-js/faker faker
    cd ..
    print_success "–°–æ–∑–¥–∞–Ω –∞–ª–∏–∞—Å faker"
fi

# Step 9: Test installation
print_status "–®–∞–≥ 9: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
echo "=========================================="

# Test @faker-js/faker
node -e "
try {
    const { faker } = require('@faker-js/faker');
    console.log('‚úÖ @faker-js/faker —Ä–∞–±–æ—Ç–∞–µ—Ç:', faker.person.firstName());
} catch (e) {
    console.log('‚ùå @faker-js/faker –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', e.message);
}
" 2>/dev/null || print_error "@faker-js/faker –Ω–µ –Ω–∞–π–¥–µ–Ω"

# Test faker alias
node -e "
try {
    const faker = require('faker');
    console.log('‚úÖ faker –∞–ª–∏–∞—Å —Ä–∞–±–æ—Ç–∞–µ—Ç');
} catch (e) {
    console.log('‚ö†Ô∏è  faker –∞–ª–∏–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)');
}
" 2>/dev/null || print_warning "faker –∞–ª–∏–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

# Test legacy faker import
node -e "
try {
    const faker = require('faker');
    if (faker.name) {
        console.log('‚úÖ –°—Ç–∞—Ä—ã–π faker API —Ä–∞–±–æ—Ç–∞–µ—Ç:', faker.name.firstName());
    } else {
        console.log('‚ö†Ô∏è  –°—Ç–∞—Ä—ã–π faker API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
} catch (e) {
    console.log('‚ö†Ô∏è  –°—Ç–∞—Ä—ã–π faker API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
}
" 2>/dev/null || true

echo "=========================================="
print_success "FAKER FIX –ó–ê–í–ï–†–®–ï–ù!"

# Final status
if [ -d "node_modules/@faker-js/faker" ]; then
    print_success "‚úÖ @faker-js/faker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    print_error "‚ùå @faker-js/faker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

if [ -d "node_modules/faker" ]; then
    print_success "‚úÖ faker –∞–ª–∏–∞—Å —Å–æ–∑–¥–∞–Ω"
else
    print_warning "‚ö†Ô∏è  faker –∞–ª–∏–∞—Å –Ω–µ —Å–æ–∑–¥–∞–Ω"
fi

echo ""
print_status "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–¥–µ:"
echo "  import { faker } from '@faker-js/faker';"
echo "  // –∏–ª–∏"
echo "  const { faker } = require('@faker-js/faker');"
echo ""
print_status "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: npm start"

